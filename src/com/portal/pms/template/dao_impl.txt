package #{dao_impl_p};

import org.hibernate.Criteria;
import org.springframework.stereotype.Repository;

import com.javassf.basic.hibernate4.QueryDaoImpl;
import #{dao_p}.#{Entity}Dao;
import #{entity_p}.#{Entity};

@Repository
public class #{Entity}DaoImpl extends QueryDaoImpl<#{Entity}, Integer> implements #{Entity}Dao {
	
	@Override
	protected Class<#{Entity}> getEntityClass() {
		return #{Entity}.class;
	}
}



package #{service_impl_p};

import javax.servlet.ServletContext;
import org.springframework.stereotype.Repository;
import org.springframework.web.context.ContextLoader;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;
import #{entity_p}.#{Entity};
import #{service_p}.#{Entity}Service;
import com.tbbke.util.Env;
import com.tbbke.util.EnvUtils;

@Repository("#{entity}Service")
public class #{Entity}ServiceImpl extends BaseServiceImpl<#{Entity}> implements #{Entity}Service {

	public static LinkingWordsService instance() {
		try {
			Env env = EnvUtils.getEnv();
			return (LinkingWordsService) env.getBean(LinkingWordsService.class);
		} catch (Exception e) {
			ServletContext servletContext = ContextLoader.getCurrentWebApplicationContext().getServletContext();
			WebApplicationContext ctx = WebApplicationContextUtils.getWebApplicationContext(servletContext);
			return ctx.getBean(LinkingWordsService.class);
		}
	}

/*	public long countByName(String name, long currentId) {
		String hql = " SELECT COUNT(*) FROM LinkingWords k WHERE k.status=1 AND k.name=:name ";
		if (currentId > 0) {
			hql += " AND k.id !=" + currentId;
		}
		return ((Long) this.getSession().createQuery(hql).setString("name", name).uniqueResult()).longValue();
	}*/
}
